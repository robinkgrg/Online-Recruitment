@model OnlineRecruitment.Models.ViewModel.JobSeekerViewModel

@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

@section banner
    {
    <div class="unit-5 overlay" style="background-image: url('images/hero_1.jpg');">
        <div class="container text-center">
            <h2 class="mb-0">JobSeeker Signup</h2>
            <p class="mb-0 unit-6"><a href="index.html">Home</a> <span class="sep">></span> <span>JobSeeker SignUp</span></p>
        </div>
    </div>
}

<div class="p-5 bg-white">
    <div class="site-section bg-light">
        <div class="container">
            <div class="row">

                <div class="col-md-12 col-lg-12 mb-5">

                    @using (Html.BeginForm("SignUp", "Home",FormMethod.Post, new { @enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Please Register with us</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="form-group">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = "checked" })Male
                                    @Html.RadioButtonFor(model => model.Gender, "Female")Female
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Skills,  new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.JobType, new SelectList(ViewBag.JobType, "JobTypeId", "JobTypeName"), "Choose JobType", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
                                </div>
                            </div>
        

                            <div class="form-group">
                                @Html.LabelFor(model => model.CurrentPosition, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.CurrentPosition, new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.CurrentPosition, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HighestDegree, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.HighestDegree,  new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.HighestDegree, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ExpectedSalary, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ExpectedSalary, new SelectList(ViewBag.ExpectedSalary, "ExpectedSalaryId", "ExpectedSalary"), "Choose expected salary", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ExpectedSalary, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Resume,  new {Type = "file", @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
                                </div>
                            </div>

                           <h2>User Credentials</h2>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Username,new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(model => model.Password,new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RetypePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(model => model.RetypePassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RetypePassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                    <h2>@ViewBag.Message</h2>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    </div>
    @*@section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }*@
